[{"E:\\projects\\react\\food_order_project\\src\\index.js":"1","E:\\projects\\react\\food_order_project\\src\\App.js":"2","E:\\projects\\react\\food_order_project\\src\\store\\CartProvider.js":"3","E:\\projects\\react\\food_order_project\\src\\store\\cart-context.js":"4","E:\\projects\\react\\food_order_project\\src\\component\\Meals\\Meals.js":"5","E:\\projects\\react\\food_order_project\\src\\component\\Cart\\Cart.js":"6","E:\\projects\\react\\food_order_project\\src\\component\\Layout\\Header\\Header.js":"7","E:\\projects\\react\\food_order_project\\src\\component\\Cart\\CartItem.js":"8","E:\\projects\\react\\food_order_project\\src\\component\\Meals\\MealsList\\MealsList.js":"9","E:\\projects\\react\\food_order_project\\src\\component\\Meals\\SummaryMeals\\SummaryMeals.js":"10","E:\\projects\\react\\food_order_project\\src\\component\\Layout\\NavCart\\HeaderCart.js":"11","E:\\projects\\react\\food_order_project\\src\\component\\UI\\Modal\\Modal.js":"12","E:\\projects\\react\\food_order_project\\src\\component\\Cart\\CartIcon.js":"13","E:\\projects\\react\\food_order_project\\src\\component\\UI\\Card\\Card.js":"14","E:\\projects\\react\\food_order_project\\src\\component\\Meals\\MealsItem\\MealsItem.js":"15","E:\\projects\\react\\food_order_project\\src\\component\\Meals\\MealsItem\\MealsItemForm.js":"16","E:\\projects\\react\\food_order_project\\src\\component\\UI\\Button\\Button.js":"17","E:\\projects\\react\\food_order_project\\src\\component\\Order\\OrderForm.js":"18"},{"size":297,"mtime":1711193792257,"results":"19","hashOfConfig":"20"},{"size":430,"mtime":1711193747187,"results":"21","hashOfConfig":"20"},{"size":2613,"mtime":1711193792258,"results":"22","hashOfConfig":"20"},{"size":259,"mtime":1711193792259,"results":"23","hashOfConfig":"20"},{"size":368,"mtime":1711193747196,"results":"24","hashOfConfig":"20"},{"size":1795,"mtime":1711193792205,"results":"25","hashOfConfig":"20"},{"size":450,"mtime":1711193747194,"results":"26","hashOfConfig":"20"},{"size":606,"mtime":1711193747193,"results":"27","hashOfConfig":"20"},{"size":1063,"mtime":1711193747198,"results":"28","hashOfConfig":"20"},{"size":555,"mtime":1711193747200,"results":"29","hashOfConfig":"20"},{"size":809,"mtime":1711193747195,"results":"30","hashOfConfig":"20"},{"size":732,"mtime":1711193747206,"results":"31","hashOfConfig":"20"},{"size":508,"mtime":1711193747192,"results":"32","hashOfConfig":"20"},{"size":260,"mtime":1711193792254,"results":"33","hashOfConfig":"20"},{"size":871,"mtime":1711193792208,"results":"34","hashOfConfig":"20"},{"size":991,"mtime":1711193747197,"results":"35","hashOfConfig":"20"},{"size":359,"mtime":1711193747203,"results":"36","hashOfConfig":"20"},{"size":3400,"mtime":1711193792252,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"atpsnq",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},"E:\\projects\\react\\food_order_project\\src\\index.js",[],"E:\\projects\\react\\food_order_project\\src\\App.js",[],"E:\\projects\\react\\food_order_project\\src\\store\\CartProvider.js",["79"],"import React,{useState, useReducer} from 'react';\r\nimport CartContext from './cart-context';\r\n\r\n// const cartValue ={\r\n//   items:[],\r\n//   totalAmount:0\r\n// }\r\n\r\n// const cartReducer = (state, action) => {\r\n\r\n//   if ( action.type === 'ADD' ) {\r\n  \r\n\r\n\r\n//   }\r\n\r\n//   return {cartValue}\r\n// }\r\nconst CartProvider = (props) => {\r\n  \r\n   const [cartItem, setCartItem] = useState([]);\r\n   const [totalAmount, setTotalAmount] = useState(0)\r\n   const [showCart, setShowCart] = useState(false);\r\n \r\n  //  const [cartState, dispatchCart] = useReducer(cartReducer, cartValue)\r\n \r\n   const addItemToCartHandler = (items,amount) => {\r\n     setCartItem(preItem => {\r\n \r\n       const existingCartItemIndex = preItem.findIndex(item => item.id === items.id);\r\n \r\n       const existingCartItem = preItem[existingCartItemIndex];\r\n \r\n       let updateItems;\r\n \r\n       if(existingCartItem){\r\n        existingCartItem.amount += amount;\r\n        const updateItem = {\r\n         ...existingCartItem\r\n         }\r\n \r\n      updateItems =[...preItem];\r\n      updateItems[existingCartItemIndex] = updateItem\r\n       }\r\n       else{\r\n         updateItems = [...preItem,items]\r\n       }\r\n     return updateItems  }) \r\n     \r\n     // setAmount\r\n     setTotalAmount((preAmount) => {\r\n       preAmount += items.price * items.amount;\r\n       return preAmount;\r\n     })\r\n\r\n    //  dispatchCart({type:'ADD', item:items});\r\n \r\n  }\r\n  \r\n  const removeItemToCartHandler = (items,id) => {\r\n   setCartItem(preItem => {\r\n     const existingCartItemIndex = preItem.findIndex(item => item.id === id)\r\n \r\n     const existingCartItem = preItem[existingCartItemIndex]\r\n \r\n     let updateItems;\r\n \r\n     if (existingCartItem.amount === 1){\r\n       updateItems = preItem.filter(item => item.id !== id)\r\n     }\r\n \r\n     else {\r\n       existingCartItem.amount -= 1\r\n       const updateItem = {\r\n         ...existingCartItem\r\n       }\r\n \r\n       updateItems = [...preItem];\r\n       updateItems[existingCartItemIndex] = updateItem\r\n     }\r\n     return updateItems\r\n   })\r\n \r\n   setTotalAmount((preAmount) => {\r\n     preAmount -= items.price;\r\n     return preAmount;\r\n   })\r\n   \r\n }\r\n \r\n  const onShowCartHandler = () => {\r\n    setShowCart(true)\r\n  }\r\n \r\n  const onHideCartHandler = () => {\r\n    setShowCart(false)\r\n  }\r\n \r\n  return <CartContext.Provider value={{\r\n   cartItem:cartItem,\r\n   showCart:showCart,\r\n   onAddItem:addItemToCartHandler,\r\n   onRemoveItem:removeItemToCartHandler,\r\n   onShowCart:onShowCartHandler,\r\n   onHideCart:onHideCartHandler,\r\n   totalAmount\r\n  }}>\r\n   {props.children}\r\n  </CartContext.Provider>\r\n }\r\n\r\n\r\nexport default CartProvider","E:\\projects\\react\\food_order_project\\src\\store\\cart-context.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\Meals\\Meals.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\Cart\\Cart.js",["80"],"import React, { useContext, useState } from \"react\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartItem from \"./CartItem\";\r\nimport OrderForm from \"../Order/OrderForm\";\r\n\r\nconst Cart = (props) => {\r\n  const ctx = useContext(CartContext);\r\n\r\n  const addItemCartHandler = (item, amount) => {\r\n    ctx.onAddItem(item, amount);\r\n  };\r\n\r\n  const removeItemCartHandler = (id) => {\r\n    ctx.onRemoveItem(id);\r\n  };\r\n\r\n  const totalAmount = `${ctx.totalAmount.toFixed(2)} $`;\r\n\r\n  const [showOrderForm, setShowOrderForm] = useState(false);\r\n\r\n  const handleOrder = () => {\r\n    setShowOrderForm(!showOrderForm);\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <ul className={classes[\"cart-items\"]}>\r\n        {ctx.cartItem.map((item) => (\r\n          <CartItem\r\n            key={item.id}\r\n            id={item.id}\r\n            name={item.name}\r\n            price={item.price}\r\n            amount={item.amount}\r\n            onAdd={addItemCartHandler.bind(null, item, 1)}\r\n            onRemove={ctx.onRemoveItem.bind(null, item, item.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <div className={classes.total}>\r\n        <span>totalAmount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={ctx.onHideCart} className={classes[\".button--alt\"]}>\r\n          Close\r\n        </button>\r\n        <button className={classes.button} onClick={handleOrder}>\r\n          Order\r\n        </button>\r\n\r\n        {showOrderForm && ctx.cartItem.length > 0 && (\r\n          <OrderForm\r\n            onHideOrderForm={handleOrder}\r\n            onConfirmOrder={handleOrder}\r\n          />\r\n        )}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","E:\\projects\\react\\food_order_project\\src\\component\\Layout\\Header\\Header.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\Cart\\CartItem.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\Meals\\MealsList\\MealsList.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\Meals\\SummaryMeals\\SummaryMeals.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\Layout\\NavCart\\HeaderCart.js",["81"],"import React, { useContext } from 'react'\r\nimport CartIcon from '../../Cart/CartIcon';\r\nimport CartContext from '../../../store/cart-context';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './HeaderCart.module.css';\r\nimport MealsItemForm from '../../Meals/MealsItem/MealsItemForm';\r\n\r\n\r\nconst HeaderCart = (props) => {\r\n\r\n  const ctx = useContext(CartContext);\r\n\r\n  const numberOfCartItems = ctx.cartItem.reduce((curNum, item) => {\r\n    return curNum + item.amount\r\n  },0)\r\n   return (\r\n    <Button className={classes.cart} \r\n      onClick={ctx.onShowCart}>\r\n\r\n      <span className={classes.icon} >\r\n        <CartIcon/>\r\n      </span>\r\n      <span> Your Cart </span>\r\n      <span className={classes.badge}>{numberOfCartItems}</span>\r\n\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default HeaderCart;","E:\\projects\\react\\food_order_project\\src\\component\\UI\\Modal\\Modal.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\Cart\\CartIcon.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\UI\\Card\\Card.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\Meals\\MealsItem\\MealsItem.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\Meals\\MealsItem\\MealsItemForm.js",["82"],"import React, { useContext, useRef, useState } from 'react';\r\nimport classes from './MealsItemForm.module.css'\r\n\r\nconst MealsItemForm = (props) => { \r\n\r\n   const [itemIsvalid, setItemIsvalid] = useState(true)\r\n\r\n  const numberRef = useRef();\r\n  \r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const enteredAmountNumber = +(numberRef.current.value)\r\n\r\n    if(enteredAmountNumber <1 ||   enteredAmountNumber > 5  ) {\r\n      setItemIsvalid(false)\r\n      return}\r\n\r\n      props.onAddToCart(enteredAmountNumber)\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler} \r\n     className={classes.form}>\r\n      <div>\r\n       <label htmlFor='number'>Amount</label>\r\n       <input \r\n        ref={numberRef}\r\n        max='5'\r\n        min='1'\r\n        type='number'\r\n        id='number'\r\n        defaultValue='1'/>\r\n       </div> \r\n     <button > +Add </button>\r\n      {!itemIsvalid && <p>please enter valided number(1,5)..</p>}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MealsItemForm","E:\\projects\\react\\food_order_project\\src\\component\\UI\\Button\\Button.js",[],"E:\\projects\\react\\food_order_project\\src\\component\\Order\\OrderForm.js",["83","84"],"import { useState } from \"react\";\r\n\r\nimport classes from \"./OrderForm.module.css\";\r\n\r\nconst OrderForm = ({ onHideOrderForm }) => {\r\n  // const [name, setName] = useState({ value: \"\", isClicked: false });\r\n  // const [street, setStreet] = useState({ value: \"\", isClicked: false });\r\n  // const [postal, setPostal] = useState({ name: \"\", isClicked: false });\r\n  // const [city, setCity] = useState({ name: \"\", isClicked: false });\r\n  const [inputVal, setInputVal] = useState({\r\n    name: \"\",\r\n    street: \"\",\r\n    postal: \"\",\r\n    city: \"\",\r\n  });\r\n  const [inputBlur, setInputBlur] = useState({\r\n    name: false,\r\n    street: false,\r\n    postal: false,\r\n    city: false,\r\n  });\r\n\r\n  const inputValHandler = (e) => {\r\n    setInputVal((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n  };\r\n\r\n  const inputBlurHandler = (e) => {\r\n    setInputBlur((prev) => ({ ...prev, [e.target.id]: true }));\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      name: inputVal.name,\r\n      city: inputVal.city,\r\n      street: inputVal.street,\r\n      postal: inputVal.postal,\r\n    };\r\n\r\n    const userBlur = {\r\n      name: inputBlur.name,\r\n      city: inputBlur.city,\r\n      street: inputBlur.street,\r\n      postal: inputBlur.postal,\r\n    };\r\n\r\n    setInputVal({\r\n      name: \"\",\r\n      street: \"\",\r\n      postal: \"\",\r\n      city: \"\",\r\n    });\r\n\r\n    console.log(userData);\r\n    console.log(userBlur);\r\n  };\r\n\r\n  const isNameInValid = inputVal.name.trim() === \"\" && inputBlur.name;\r\n  const isStreetInValid = inputBlur.street && inputVal.street.trim() === \"\";\r\n  const isPostalInValid =\r\n    inputBlur.postal &&\r\n    inputVal.postal.trim() === \"\" &&\r\n    inputVal.postal.length < 5;\r\n  const isCityInValid = inputBlur.city && inputVal.city.trim() == \"\";\r\n\r\n  let formIsValid =\r\n    !isNameInValid || !isStreetInValid || !isPostalInValid || !isCityInValid;\r\n  return (\r\n    <form className={classes[\"order_form\"]} onSubmit={submitHandler}>\r\n      <div className={`${classes.control} ${isNameInValid ? classes.err : \"\"}`}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={inputValHandler}\r\n          onBlur={inputBlurHandler}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className={`${classes.control} ${isStreetInValid ? classes.err : \"\"}`}\r\n      >\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"street\"\r\n          onChange={inputValHandler}\r\n          onBlur={inputBlurHandler}\r\n        />\r\n      </div>\r\n      <div\r\n        className={`${classes.control} ${isPostalInValid ? classes.err : \"\"}`}\r\n      >\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"postal\"\r\n          onChange={inputValHandler}\r\n          onBlur={inputBlurHandler}\r\n        />\r\n      </div>\r\n      <div className={`${classes.control} ${isCityInValid ? classes.err : \"\"}`}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          onChange={inputValHandler}\r\n          onBlur={inputBlurHandler}\r\n        />\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"submit\">Confirm</button>\r\n        <button onClick={onHideOrderForm}>Cancel</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n",{"ruleId":"85","severity":1,"message":"86","line":1,"column":25,"nodeType":"87","messageId":"88","endLine":1,"endColumn":35},{"ruleId":"85","severity":1,"message":"89","line":15,"column":9,"nodeType":"87","messageId":"88","endLine":15,"endColumn":30},{"ruleId":"85","severity":1,"message":"90","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":21},{"ruleId":"85","severity":1,"message":"91","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":27},{"ruleId":"92","severity":1,"message":"93","line":65,"column":64,"nodeType":"94","messageId":"95","endLine":65,"endColumn":66},{"ruleId":"85","severity":1,"message":"96","line":67,"column":7,"nodeType":"87","messageId":"88","endLine":67,"endColumn":18},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'removeItemCartHandler' is assigned a value but never used.","'MealsItemForm' is defined but never used.","'useContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'formIsValid' is assigned a value but never used."]